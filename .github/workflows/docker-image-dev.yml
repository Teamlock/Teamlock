name: Docker Dev Image

on:
  push:
    branches: [dev]

env:
  VERSION: "1.0"

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        run: sudo docker build -t teamlock:dev-$VERSION --build-arg VERSION=$VERSION .

  deploy:
    runs-on: self-hosted
    needs: build
    env:
      PERSONNAL_TOKEN: ${{ secrets.PERSONNAL_TOKEN }}
    steps:
      - name: Login on Container registry
        run: echo $PERSONNAL_TOKEN | sudo docker login ghcr.io -u raznak --password-stdin
      - name: Tag the image
        run: sudo docker tag teamlock:dev-$VERSION ghcr.io/teamlock/teamlock:dev-$VERSION
      - name: Push the image
        run: sudo docker push ghcr.io/teamlock/teamlock:dev-$VERSION

      # This is the a separate action that sets up buildx runner
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # # So now you can use Actions' own caching!
      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-build-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}
      # # And make it available for the builds
      # - name: Login on Container registry
      #   run: echo $PERSONNAL_TOKEN | sudo docker login ghcr.io -u raznak --password-stdin
      #     docker build -t teamlock:dev-$VERSION --build-arg VERSION=$VERSION .
      #     docker tag teamlock:dev-$VERSION ghcr.io/teamlock/teamlock:dev-$VERSION
      #     docker push ghcr.io/teamlock/teamlock:dev-$VERSION
